package permission

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// DeletePermissionsUUIDReader is a Reader for the DeletePermissionsUUID structure.
type DeletePermissionsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePermissionsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePermissionsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeletePermissionsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewDeletePermissionsUUIDOK creates a DeletePermissionsUUIDOK with default headers values
func NewDeletePermissionsUUIDOK() *DeletePermissionsUUIDOK {
	return &DeletePermissionsUUIDOK{}
}

/*DeletePermissionsUUIDOK handles this case with default header values.

Successful operation
*/
type DeletePermissionsUUIDOK struct {
}

func (o *DeletePermissionsUUIDOK) Error() string {
	return fmt.Sprintf("[DELETE /permissions/{uuid}][%d] deletePermissionsUuidOK ", 200)
}

func (o *DeletePermissionsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePermissionsUUIDDefault creates a DeletePermissionsUUIDDefault with default headers values
func NewDeletePermissionsUUIDDefault(code int) *DeletePermissionsUUIDDefault {
	return &DeletePermissionsUUIDDefault{
		_statusCode: code,
	}
}

/*DeletePermissionsUUIDDefault handles this case with default header values.

Error
*/
type DeletePermissionsUUIDDefault struct {
	_statusCode int

	Payload *models.PermissionStatus
}

// Code gets the status code for the delete permissions UUID default response
func (o *DeletePermissionsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *DeletePermissionsUUIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /permissions/{uuid}][%d] DeletePermissionsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *DeletePermissionsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PermissionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
