package workflow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// GetWorkflowsUUIDReader is a Reader for the GetWorkflowsUUID structure.
type GetWorkflowsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWorkflowsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetWorkflowsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetWorkflowsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetWorkflowsUUIDOK creates a GetWorkflowsUUIDOK with default headers values
func NewGetWorkflowsUUIDOK() *GetWorkflowsUUIDOK {
	return &GetWorkflowsUUIDOK{}
}

/*GetWorkflowsUUIDOK handles this case with default header values.

Success
*/
type GetWorkflowsUUIDOK struct {
	Payload *models.WorkflowIntentResponse
}

func (o *GetWorkflowsUUIDOK) Error() string {
	return fmt.Sprintf("[GET /workflows/{uuid}][%d] getWorkflowsUuidOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsUUIDNotFound creates a GetWorkflowsUUIDNotFound with default headers values
func NewGetWorkflowsUUIDNotFound() *GetWorkflowsUUIDNotFound {
	return &GetWorkflowsUUIDNotFound{}
}

/*GetWorkflowsUUIDNotFound handles this case with default header values.

Entity not found
*/
type GetWorkflowsUUIDNotFound struct {
	Payload *models.WorkflowStatus
}

func (o *GetWorkflowsUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /workflows/{uuid}][%d] getWorkflowsUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsUUIDDefault creates a GetWorkflowsUUIDDefault with default headers values
func NewGetWorkflowsUUIDDefault(code int) *GetWorkflowsUUIDDefault {
	return &GetWorkflowsUUIDDefault{
		_statusCode: code,
	}
}

/*GetWorkflowsUUIDDefault handles this case with default header values.

Internal Error
*/
type GetWorkflowsUUIDDefault struct {
	_statusCode int

	Payload *models.WorkflowStatus
}

// Code gets the status code for the get workflows UUID default response
func (o *GetWorkflowsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkflowsUUIDDefault) Error() string {
	return fmt.Sprintf("[GET /workflows/{uuid}][%d] GetWorkflowsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkflowsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
