package workflow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// PatchWorkflowsUUIDReader is a Reader for the PatchWorkflowsUUID structure.
type PatchWorkflowsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkflowsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchWorkflowsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchWorkflowsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchWorkflowsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPatchWorkflowsUUIDOK creates a PatchWorkflowsUUIDOK with default headers values
func NewPatchWorkflowsUUIDOK() *PatchWorkflowsUUIDOK {
	return &PatchWorkflowsUUIDOK{}
}

/*PatchWorkflowsUUIDOK handles this case with default header values.

Request Succeeded
*/
type PatchWorkflowsUUIDOK struct {
	Payload *models.WorkflowIntentResponse
}

func (o *PatchWorkflowsUUIDOK) Error() string {
	return fmt.Sprintf("[PATCH /workflows/{uuid}][%d] patchWorkflowsUuidOK  %+v", 200, o.Payload)
}

func (o *PatchWorkflowsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkflowsUUIDNotFound creates a PatchWorkflowsUUIDNotFound with default headers values
func NewPatchWorkflowsUUIDNotFound() *PatchWorkflowsUUIDNotFound {
	return &PatchWorkflowsUUIDNotFound{}
}

/*PatchWorkflowsUUIDNotFound handles this case with default header values.

Invalid UUID Provided
*/
type PatchWorkflowsUUIDNotFound struct {
	Payload *models.WorkflowStatus
}

func (o *PatchWorkflowsUUIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /workflows/{uuid}][%d] patchWorkflowsUuidNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkflowsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkflowsUUIDDefault creates a PatchWorkflowsUUIDDefault with default headers values
func NewPatchWorkflowsUUIDDefault(code int) *PatchWorkflowsUUIDDefault {
	return &PatchWorkflowsUUIDDefault{
		_statusCode: code,
	}
}

/*PatchWorkflowsUUIDDefault handles this case with default header values.

Internal Error
*/
type PatchWorkflowsUUIDDefault struct {
	_statusCode int

	Payload *models.WorkflowStatus
}

// Code gets the status code for the patch workflows UUID default response
func (o *PatchWorkflowsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchWorkflowsUUIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /workflows/{uuid}][%d] PatchWorkflowsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchWorkflowsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
