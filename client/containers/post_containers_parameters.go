package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// NewPostContainersParams creates a new PostContainersParams object
// with the default values initialized.
func NewPostContainersParams() *PostContainersParams {
	var ()
	return &PostContainersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostContainersParamsWithTimeout creates a new PostContainersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostContainersParamsWithTimeout(timeout time.Duration) *PostContainersParams {
	var ()
	return &PostContainersParams{

		timeout: timeout,
	}
}

// NewPostContainersParamsWithContext creates a new PostContainersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostContainersParamsWithContext(ctx context.Context) *PostContainersParams {
	var ()
	return &PostContainersParams{

		Context: ctx,
	}
}

/*PostContainersParams contains all the parameters to send to the API endpoint
for the post containers operation typically these are written to a http.Request
*/
type PostContainersParams struct {

	/*ContainerIntent
	  Intent Spec of Container

	*/
	ContainerIntent *models.ContainerIntentInput

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the post containers params
func (o *PostContainersParams) WithTimeout(timeout time.Duration) *PostContainersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post containers params
func (o *PostContainersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post containers params
func (o *PostContainersParams) WithContext(ctx context.Context) *PostContainersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post containers params
func (o *PostContainersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithContainerIntent adds the containerIntent to the post containers params
func (o *PostContainersParams) WithContainerIntent(containerIntent *models.ContainerIntentInput) *PostContainersParams {
	o.SetContainerIntent(containerIntent)
	return o
}

// SetContainerIntent adds the containerIntent to the post containers params
func (o *PostContainersParams) SetContainerIntent(containerIntent *models.ContainerIntentInput) {
	o.ContainerIntent = containerIntent
}

// WriteToRequest writes these params to a swagger request
func (o *PostContainersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.ContainerIntent == nil {
		o.ContainerIntent = new(models.ContainerIntentInput)
	}

	if err := r.SetBodyParam(o.ContainerIntent); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
