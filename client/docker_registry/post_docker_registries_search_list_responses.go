package docker_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostDockerRegistriesSearchListReader is a Reader for the PostDockerRegistriesSearchList structure.
type PostDockerRegistriesSearchListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDockerRegistriesSearchListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostDockerRegistriesSearchListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostDockerRegistriesSearchListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostDockerRegistriesSearchListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostDockerRegistriesSearchListOK creates a PostDockerRegistriesSearchListOK with default headers values
func NewPostDockerRegistriesSearchListOK() *PostDockerRegistriesSearchListOK {
	return &PostDockerRegistriesSearchListOK{}
}

/*PostDockerRegistriesSearchListOK handles this case with default header values.

Matched images based on image name
*/
type PostDockerRegistriesSearchListOK struct {
	Payload *models.DockerRegistryImageSearch
}

func (o *PostDockerRegistriesSearchListOK) Error() string {
	return fmt.Sprintf("[POST /docker_registries/search/list][%d] postDockerRegistriesSearchListOK  %+v", 200, o.Payload)
}

func (o *PostDockerRegistriesSearchListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerRegistryImageSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDockerRegistriesSearchListNotFound creates a PostDockerRegistriesSearchListNotFound with default headers values
func NewPostDockerRegistriesSearchListNotFound() *PostDockerRegistriesSearchListNotFound {
	return &PostDockerRegistriesSearchListNotFound{}
}

/*PostDockerRegistriesSearchListNotFound handles this case with default header values.

No matches found based in image name
*/
type PostDockerRegistriesSearchListNotFound struct {
	Payload *models.DockerRegistryImageSearch
}

func (o *PostDockerRegistriesSearchListNotFound) Error() string {
	return fmt.Sprintf("[POST /docker_registries/search/list][%d] postDockerRegistriesSearchListNotFound  %+v", 404, o.Payload)
}

func (o *PostDockerRegistriesSearchListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerRegistryImageSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDockerRegistriesSearchListDefault creates a PostDockerRegistriesSearchListDefault with default headers values
func NewPostDockerRegistriesSearchListDefault(code int) *PostDockerRegistriesSearchListDefault {
	return &PostDockerRegistriesSearchListDefault{
		_statusCode: code,
	}
}

/*PostDockerRegistriesSearchListDefault handles this case with default header values.

Failed to communicate with Docker Hub
*/
type PostDockerRegistriesSearchListDefault struct {
	_statusCode int
}

// Code gets the status code for the post docker registries search list default response
func (o *PostDockerRegistriesSearchListDefault) Code() int {
	return o._statusCode
}

func (o *PostDockerRegistriesSearchListDefault) Error() string {
	return fmt.Sprintf("[POST /docker_registries/search/list][%d] PostDockerRegistriesSearchList default ", o._statusCode)
}

func (o *PostDockerRegistriesSearchListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
