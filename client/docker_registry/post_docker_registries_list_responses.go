package docker_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostDockerRegistriesListReader is a Reader for the PostDockerRegistriesList structure.
type PostDockerRegistriesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDockerRegistriesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostDockerRegistriesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostDockerRegistriesListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostDockerRegistriesListOK creates a PostDockerRegistriesListOK with default headers values
func NewPostDockerRegistriesListOK() *PostDockerRegistriesListOK {
	return &PostDockerRegistriesListOK{}
}

/*PostDockerRegistriesListOK handles this case with default header values.

Retrieved all docker registries
*/
type PostDockerRegistriesListOK struct {
	Payload *models.DockerRegistryListIntentResponse
}

func (o *PostDockerRegistriesListOK) Error() string {
	return fmt.Sprintf("[POST /docker_registries/list][%d] postDockerRegistriesListOK  %+v", 200, o.Payload)
}

func (o *PostDockerRegistriesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerRegistryListIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDockerRegistriesListDefault creates a PostDockerRegistriesListDefault with default headers values
func NewPostDockerRegistriesListDefault(code int) *PostDockerRegistriesListDefault {
	return &PostDockerRegistriesListDefault{
		_statusCode: code,
	}
}

/*PostDockerRegistriesListDefault handles this case with default header values.

Failed to list docker registries
*/
type PostDockerRegistriesListDefault struct {
	_statusCode int

	Payload *models.DockerRegistryStatus
}

// Code gets the status code for the post docker registries list default response
func (o *PostDockerRegistriesListDefault) Code() int {
	return o._statusCode
}

func (o *PostDockerRegistriesListDefault) Error() string {
	return fmt.Sprintf("[POST /docker_registries/list][%d] PostDockerRegistriesList default  %+v", o._statusCode, o.Payload)
}

func (o *PostDockerRegistriesListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerRegistryStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
