package availability_zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// PostAvailabilityZonesReader is a Reader for the PostAvailabilityZones structure.
type PostAvailabilityZonesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAvailabilityZonesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAvailabilityZonesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostAvailabilityZonesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostAvailabilityZonesOK creates a PostAvailabilityZonesOK with default headers values
func NewPostAvailabilityZonesOK() *PostAvailabilityZonesOK {
	return &PostAvailabilityZonesOK{}
}

/*PostAvailabilityZonesOK handles this case with default header values.

Success
*/
type PostAvailabilityZonesOK struct {
	Payload *models.AvailabilityZone
}

func (o *PostAvailabilityZonesOK) Error() string {
	return fmt.Sprintf("[POST /availability_zones][%d] postAvailabilityZonesOK  %+v", 200, o.Payload)
}

func (o *PostAvailabilityZonesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AvailabilityZone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAvailabilityZonesDefault creates a PostAvailabilityZonesDefault with default headers values
func NewPostAvailabilityZonesDefault(code int) *PostAvailabilityZonesDefault {
	return &PostAvailabilityZonesDefault{
		_statusCode: code,
	}
}

/*PostAvailabilityZonesDefault handles this case with default header values.

Error
*/
type PostAvailabilityZonesDefault struct {
	_statusCode int

	Payload *models.AvailabilityZoneStatus
}

// Code gets the status code for the post availability zones default response
func (o *PostAvailabilityZonesDefault) Code() int {
	return o._statusCode
}

func (o *PostAvailabilityZonesDefault) Error() string {
	return fmt.Sprintf("[POST /availability_zones][%d] PostAvailabilityZones default  %+v", o._statusCode, o.Payload)
}

func (o *PostAvailabilityZonesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AvailabilityZoneStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
