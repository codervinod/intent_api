package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// GetWebhooksUUIDReader is a Reader for the GetWebhooksUUID structure.
type GetWebhooksUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebhooksUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWebhooksUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetWebhooksUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetWebhooksUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetWebhooksUUIDOK creates a GetWebhooksUUIDOK with default headers values
func NewGetWebhooksUUIDOK() *GetWebhooksUUIDOK {
	return &GetWebhooksUUIDOK{}
}

/*GetWebhooksUUIDOK handles this case with default header values.

Request succeeded
*/
type GetWebhooksUUIDOK struct {
	Payload *models.WebhookIntentResponse
}

func (o *GetWebhooksUUIDOK) Error() string {
	return fmt.Sprintf("[GET /webhooks/{uuid}][%d] getWebhooksUuidOK  %+v", 200, o.Payload)
}

func (o *GetWebhooksUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebhookIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhooksUUIDNotFound creates a GetWebhooksUUIDNotFound with default headers values
func NewGetWebhooksUUIDNotFound() *GetWebhooksUUIDNotFound {
	return &GetWebhooksUUIDNotFound{}
}

/*GetWebhooksUUIDNotFound handles this case with default header values.

Invalid UUID Provided
*/
type GetWebhooksUUIDNotFound struct {
	Payload *models.WebhookStatus
}

func (o *GetWebhooksUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /webhooks/{uuid}][%d] getWebhooksUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetWebhooksUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebhookStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhooksUUIDDefault creates a GetWebhooksUUIDDefault with default headers values
func NewGetWebhooksUUIDDefault(code int) *GetWebhooksUUIDDefault {
	return &GetWebhooksUUIDDefault{
		_statusCode: code,
	}
}

/*GetWebhooksUUIDDefault handles this case with default header values.

Internal Error
*/
type GetWebhooksUUIDDefault struct {
	_statusCode int

	Payload *models.WebhookStatus
}

// Code gets the status code for the get webhooks UUID default response
func (o *GetWebhooksUUIDDefault) Code() int {
	return o._statusCode
}

func (o *GetWebhooksUUIDDefault) Error() string {
	return fmt.Sprintf("[GET /webhooks/{uuid}][%d] GetWebhooksUUID default  %+v", o._statusCode, o.Payload)
}

func (o *GetWebhooksUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebhookStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
