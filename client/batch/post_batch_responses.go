package batch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostBatchReader is a Reader for the PostBatch structure.
type PostBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostBatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostBatchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostBatchOK creates a PostBatchOK with default headers values
func NewPostBatchOK() *PostBatchOK {
	return &PostBatchOK{}
}

/*PostBatchOK handles this case with default header values.

Requests processed successfully.
*/
type PostBatchOK struct {
	Payload *models.BatchResponse
}

func (o *PostBatchOK) Error() string {
	return fmt.Sprintf("[POST /batch][%d] postBatchOK  %+v", 200, o.Payload)
}

func (o *PostBatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BatchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBatchDefault creates a PostBatchDefault with default headers values
func NewPostBatchDefault(code int) *PostBatchDefault {
	return &PostBatchDefault{
		_statusCode: code,
	}
}

/*PostBatchDefault handles this case with default header values.

Failed to process requests
*/
type PostBatchDefault struct {
	_statusCode int

	Payload *models.Status
}

// Code gets the status code for the post batch default response
func (o *PostBatchDefault) Code() int {
	return o._statusCode
}

func (o *PostBatchDefault) Error() string {
	return fmt.Sprintf("[POST /batch][%d] PostBatch default  %+v", o._statusCode, o.Payload)
}

func (o *PostBatchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
