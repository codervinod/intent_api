package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// NewPutNetworksUUIDParams creates a new PutNetworksUUIDParams object
// with the default values initialized.
func NewPutNetworksUUIDParams() *PutNetworksUUIDParams {
	var ()
	return &PutNetworksUUIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutNetworksUUIDParamsWithTimeout creates a new PutNetworksUUIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutNetworksUUIDParamsWithTimeout(timeout time.Duration) *PutNetworksUUIDParams {
	var ()
	return &PutNetworksUUIDParams{

		timeout: timeout,
	}
}

// NewPutNetworksUUIDParamsWithContext creates a new PutNetworksUUIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutNetworksUUIDParamsWithContext(ctx context.Context) *PutNetworksUUIDParams {
	var ()
	return &PutNetworksUUIDParams{

		Context: ctx,
	}
}

/*PutNetworksUUIDParams contains all the parameters to send to the API endpoint
for the put networks UUID operation typically these are written to a http.Request
*/
type PutNetworksUUIDParams struct {

	/*Request*/
	Request *models.Network
	/*UUID
	  The UUID of the entity.

	*/
	UUID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the put networks UUID params
func (o *PutNetworksUUIDParams) WithTimeout(timeout time.Duration) *PutNetworksUUIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put networks UUID params
func (o *PutNetworksUUIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put networks UUID params
func (o *PutNetworksUUIDParams) WithContext(ctx context.Context) *PutNetworksUUIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put networks UUID params
func (o *PutNetworksUUIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithRequest adds the request to the put networks UUID params
func (o *PutNetworksUUIDParams) WithRequest(request *models.Network) *PutNetworksUUIDParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the put networks UUID params
func (o *PutNetworksUUIDParams) SetRequest(request *models.Network) {
	o.Request = request
}

// WithUUID adds the uuid to the put networks UUID params
func (o *PutNetworksUUIDParams) WithUUID(uuid string) *PutNetworksUUIDParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the put networks UUID params
func (o *PutNetworksUUIDParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *PutNetworksUUIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Request == nil {
		o.Request = new(models.Network)
	}

	if err := r.SetBodyParam(o.Request); err != nil {
		return err
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
