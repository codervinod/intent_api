package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// GetHostsUUIDReader is a Reader for the GetHostsUUID structure.
type GetHostsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHostsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetHostsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetHostsUUIDOK creates a GetHostsUUIDOK with default headers values
func NewGetHostsUUIDOK() *GetHostsUUIDOK {
	return &GetHostsUUIDOK{}
}

/*GetHostsUUIDOK handles this case with default header values.

Request succeeded
*/
type GetHostsUUIDOK struct {
	Payload *models.HostIntentResponse
}

func (o *GetHostsUUIDOK) Error() string {
	return fmt.Sprintf("[GET /hosts/{uuid}][%d] getHostsUuidOK  %+v", 200, o.Payload)
}

func (o *GetHostsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsUUIDDefault creates a GetHostsUUIDDefault with default headers values
func NewGetHostsUUIDDefault(code int) *GetHostsUUIDDefault {
	return &GetHostsUUIDDefault{
		_statusCode: code,
	}
}

/*GetHostsUUIDDefault handles this case with default header values.

Internal Error
*/
type GetHostsUUIDDefault struct {
	_statusCode int

	Payload *models.HostStatus
}

// Code gets the status code for the get hosts UUID default response
func (o *GetHostsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *GetHostsUUIDDefault) Error() string {
	return fmt.Sprintf("[GET /hosts/{uuid}][%d] GetHostsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *GetHostsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
