package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostHostsReader is a Reader for the PostHosts structure.
type PostHostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostHostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostHostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostHostsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostHostsOK creates a PostHostsOK with default headers values
func NewPostHostsOK() *PostHostsOK {
	return &PostHostsOK{}
}

/*PostHostsOK handles this case with default header values.

Request succeeded
*/
type PostHostsOK struct {
	Payload *models.HostIntentResponse
}

func (o *PostHostsOK) Error() string {
	return fmt.Sprintf("[POST /hosts/][%d] postHostsOK  %+v", 200, o.Payload)
}

func (o *PostHostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostHostsDefault creates a PostHostsDefault with default headers values
func NewPostHostsDefault(code int) *PostHostsDefault {
	return &PostHostsDefault{
		_statusCode: code,
	}
}

/*PostHostsDefault handles this case with default header values.

Internal error
*/
type PostHostsDefault struct {
	_statusCode int

	Payload *models.HostStatus
}

// Code gets the status code for the post hosts default response
func (o *PostHostsDefault) Code() int {
	return o._statusCode
}

func (o *PostHostsDefault) Error() string {
	return fmt.Sprintf("[POST /hosts/][%d] PostHosts default  %+v", o._statusCode, o.Payload)
}

func (o *PostHostsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
