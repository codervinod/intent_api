package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostPolicyListReader is a Reader for the PostPolicyList structure.
type PostPolicyListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPolicyListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPolicyListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostPolicyListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostPolicyListOK creates a PostPolicyListOK with default headers values
func NewPostPolicyListOK() *PostPolicyListOK {
	return &PostPolicyListOK{}
}

/*PostPolicyListOK handles this case with default header values.

Success
*/
type PostPolicyListOK struct {
	Payload *models.PolicyList
}

func (o *PostPolicyListOK) Error() string {
	return fmt.Sprintf("[POST /policy/list][%d] postPolicyListOK  %+v", 200, o.Payload)
}

func (o *PostPolicyListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPolicyListDefault creates a PostPolicyListDefault with default headers values
func NewPostPolicyListDefault(code int) *PostPolicyListDefault {
	return &PostPolicyListDefault{
		_statusCode: code,
	}
}

/*PostPolicyListDefault handles this case with default header values.

Error
*/
type PostPolicyListDefault struct {
	_statusCode int

	Payload *models.PolicyStatus
}

// Code gets the status code for the post policy list default response
func (o *PostPolicyListDefault) Code() int {
	return o._statusCode
}

func (o *PostPolicyListDefault) Error() string {
	return fmt.Sprintf("[POST /policy/list][%d] PostPolicyList default  %+v", o._statusCode, o.Payload)
}

func (o *PostPolicyListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
