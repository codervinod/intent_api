package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// NewPostPolicyParams creates a new PostPolicyParams object
// with the default values initialized.
func NewPostPolicyParams() *PostPolicyParams {
	var ()
	return &PostPolicyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostPolicyParamsWithTimeout creates a new PostPolicyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostPolicyParamsWithTimeout(timeout time.Duration) *PostPolicyParams {
	var ()
	return &PostPolicyParams{

		timeout: timeout,
	}
}

// NewPostPolicyParamsWithContext creates a new PostPolicyParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostPolicyParamsWithContext(ctx context.Context) *PostPolicyParams {
	var ()
	return &PostPolicyParams{

		Context: ctx,
	}
}

/*PostPolicyParams contains all the parameters to send to the API endpoint
for the post policy operation typically these are written to a http.Request
*/
type PostPolicyParams struct {

	/*Request*/
	Request *models.Policy

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the post policy params
func (o *PostPolicyParams) WithTimeout(timeout time.Duration) *PostPolicyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post policy params
func (o *PostPolicyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post policy params
func (o *PostPolicyParams) WithContext(ctx context.Context) *PostPolicyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post policy params
func (o *PostPolicyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithRequest adds the request to the post policy params
func (o *PostPolicyParams) WithRequest(request *models.Policy) *PostPolicyParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the post policy params
func (o *PostPolicyParams) SetRequest(request *models.Policy) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *PostPolicyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Request == nil {
		o.Request = new(models.Policy)
	}

	if err := r.SetBodyParam(o.Request); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
