package vm_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostVMSnapshotsListReader is a Reader for the PostVMSnapshotsList structure.
type PostVMSnapshotsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVMSnapshotsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostVMSnapshotsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostVMSnapshotsListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostVMSnapshotsListOK creates a PostVMSnapshotsListOK with default headers values
func NewPostVMSnapshotsListOK() *PostVMSnapshotsListOK {
	return &PostVMSnapshotsListOK{}
}

/*PostVMSnapshotsListOK handles this case with default header values.

Successful operation
*/
type PostVMSnapshotsListOK struct {
	Payload *models.VMSnapshotListIntentResponse
}

func (o *PostVMSnapshotsListOK) Error() string {
	return fmt.Sprintf("[POST /vm_snapshots/list][%d] postVmSnapshotsListOK  %+v", 200, o.Payload)
}

func (o *PostVMSnapshotsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMSnapshotListIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVMSnapshotsListDefault creates a PostVMSnapshotsListDefault with default headers values
func NewPostVMSnapshotsListDefault(code int) *PostVMSnapshotsListDefault {
	return &PostVMSnapshotsListDefault{
		_statusCode: code,
	}
}

/*PostVMSnapshotsListDefault handles this case with default header values.

Error
*/
type PostVMSnapshotsListDefault struct {
	_statusCode int

	Payload *models.VMSnapshotStatus
}

// Code gets the status code for the post VM snapshots list default response
func (o *PostVMSnapshotsListDefault) Code() int {
	return o._statusCode
}

func (o *PostVMSnapshotsListDefault) Error() string {
	return fmt.Sprintf("[POST /vm_snapshots/list][%d] PostVMSnapshotsList default  %+v", o._statusCode, o.Payload)
}

func (o *PostVMSnapshotsListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMSnapshotStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
