package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// DeleteVmsUUIDReader is a Reader for the DeleteVmsUUID structure.
type DeleteVmsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVmsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteVmsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteVmsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteVmsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewDeleteVmsUUIDOK creates a DeleteVmsUUIDOK with default headers values
func NewDeleteVmsUUIDOK() *DeleteVmsUUIDOK {
	return &DeleteVmsUUIDOK{}
}

/*DeleteVmsUUIDOK handles this case with default header values.

Request Succeeded
*/
type DeleteVmsUUIDOK struct {
}

func (o *DeleteVmsUUIDOK) Error() string {
	return fmt.Sprintf("[DELETE /vms/{uuid}][%d] deleteVmsUuidOK ", 200)
}

func (o *DeleteVmsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVmsUUIDNotFound creates a DeleteVmsUUIDNotFound with default headers values
func NewDeleteVmsUUIDNotFound() *DeleteVmsUUIDNotFound {
	return &DeleteVmsUUIDNotFound{}
}

/*DeleteVmsUUIDNotFound handles this case with default header values.

Invalid UUID Provided
*/
type DeleteVmsUUIDNotFound struct {
	Payload *models.VMStatus
}

func (o *DeleteVmsUUIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vms/{uuid}][%d] deleteVmsUuidNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVmsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVmsUUIDDefault creates a DeleteVmsUUIDDefault with default headers values
func NewDeleteVmsUUIDDefault(code int) *DeleteVmsUUIDDefault {
	return &DeleteVmsUUIDDefault{
		_statusCode: code,
	}
}

/*DeleteVmsUUIDDefault handles this case with default header values.

Internal Error
*/
type DeleteVmsUUIDDefault struct {
	_statusCode int

	Payload *models.VMStatus
}

// Code gets the status code for the delete vms UUID default response
func (o *DeleteVmsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVmsUUIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /vms/{uuid}][%d] DeleteVmsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVmsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
