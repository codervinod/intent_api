package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostVmsReader is a Reader for the PostVms structure.
type PostVmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostVmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostVmsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostVmsOK creates a PostVmsOK with default headers values
func NewPostVmsOK() *PostVmsOK {
	return &PostVmsOK{}
}

/*PostVmsOK handles this case with default header values.

Request Succeeded
*/
type PostVmsOK struct {
	Payload *models.VMIntentResponse
}

func (o *PostVmsOK) Error() string {
	return fmt.Sprintf("[POST /vms][%d] postVmsOK  %+v", 200, o.Payload)
}

func (o *PostVmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVmsDefault creates a PostVmsDefault with default headers values
func NewPostVmsDefault(code int) *PostVmsDefault {
	return &PostVmsDefault{
		_statusCode: code,
	}
}

/*PostVmsDefault handles this case with default header values.

Internal Error
*/
type PostVmsDefault struct {
	_statusCode int

	Payload *models.VMStatus
}

// Code gets the status code for the post vms default response
func (o *PostVmsDefault) Code() int {
	return o._statusCode
}

func (o *PostVmsDefault) Error() string {
	return fmt.Sprintf("[POST /vms][%d] PostVms default  %+v", o._statusCode, o.Payload)
}

func (o *PostVmsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
