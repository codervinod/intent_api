package extension

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// GetExtensionsUUIDReader is a Reader for the GetExtensionsUUID structure.
type GetExtensionsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetExtensionsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetExtensionsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetExtensionsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetExtensionsUUIDOK creates a GetExtensionsUUIDOK with default headers values
func NewGetExtensionsUUIDOK() *GetExtensionsUUIDOK {
	return &GetExtensionsUUIDOK{}
}

/*GetExtensionsUUIDOK handles this case with default header values.

Successful operation
*/
type GetExtensionsUUIDOK struct {
	Payload *models.ExtensionIntentResponse
}

func (o *GetExtensionsUUIDOK) Error() string {
	return fmt.Sprintf("[GET /extensions/{uuid}][%d] getExtensionsUuidOK  %+v", 200, o.Payload)
}

func (o *GetExtensionsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionsUUIDNotFound creates a GetExtensionsUUIDNotFound with default headers values
func NewGetExtensionsUUIDNotFound() *GetExtensionsUUIDNotFound {
	return &GetExtensionsUUIDNotFound{}
}

/*GetExtensionsUUIDNotFound handles this case with default header values.

Extension does not exists
*/
type GetExtensionsUUIDNotFound struct {
	Payload *models.ExtensionStatus
}

func (o *GetExtensionsUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /extensions/{uuid}][%d] getExtensionsUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetExtensionsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionsUUIDDefault creates a GetExtensionsUUIDDefault with default headers values
func NewGetExtensionsUUIDDefault(code int) *GetExtensionsUUIDDefault {
	return &GetExtensionsUUIDDefault{
		_statusCode: code,
	}
}

/*GetExtensionsUUIDDefault handles this case with default header values.

Error
*/
type GetExtensionsUUIDDefault struct {
	_statusCode int

	Payload *models.ExtensionStatus
}

// Code gets the status code for the get extensions UUID default response
func (o *GetExtensionsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *GetExtensionsUUIDDefault) Error() string {
	return fmt.Sprintf("[GET /extensions/{uuid}][%d] GetExtensionsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *GetExtensionsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
