package extension

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// DeleteExtensionsUUIDReader is a Reader for the DeleteExtensionsUUID structure.
type DeleteExtensionsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteExtensionsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteExtensionsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteExtensionsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteExtensionsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewDeleteExtensionsUUIDOK creates a DeleteExtensionsUUIDOK with default headers values
func NewDeleteExtensionsUUIDOK() *DeleteExtensionsUUIDOK {
	return &DeleteExtensionsUUIDOK{}
}

/*DeleteExtensionsUUIDOK handles this case with default header values.

Successful operation
*/
type DeleteExtensionsUUIDOK struct {
}

func (o *DeleteExtensionsUUIDOK) Error() string {
	return fmt.Sprintf("[DELETE /extensions/{uuid}][%d] deleteExtensionsUuidOK ", 200)
}

func (o *DeleteExtensionsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteExtensionsUUIDNotFound creates a DeleteExtensionsUUIDNotFound with default headers values
func NewDeleteExtensionsUUIDNotFound() *DeleteExtensionsUUIDNotFound {
	return &DeleteExtensionsUUIDNotFound{}
}

/*DeleteExtensionsUUIDNotFound handles this case with default header values.

Extension does not exists
*/
type DeleteExtensionsUUIDNotFound struct {
	Payload *models.ExtensionStatus
}

func (o *DeleteExtensionsUUIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /extensions/{uuid}][%d] deleteExtensionsUuidNotFound  %+v", 404, o.Payload)
}

func (o *DeleteExtensionsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteExtensionsUUIDDefault creates a DeleteExtensionsUUIDDefault with default headers values
func NewDeleteExtensionsUUIDDefault(code int) *DeleteExtensionsUUIDDefault {
	return &DeleteExtensionsUUIDDefault{
		_statusCode: code,
	}
}

/*DeleteExtensionsUUIDDefault handles this case with default header values.

Error
*/
type DeleteExtensionsUUIDDefault struct {
	_statusCode int

	Payload *models.ExtensionStatus
}

// Code gets the status code for the delete extensions UUID default response
func (o *DeleteExtensionsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteExtensionsUUIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /extensions/{uuid}][%d] DeleteExtensionsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteExtensionsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
