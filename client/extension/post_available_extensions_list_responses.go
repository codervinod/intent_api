package extension

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// PostAvailableExtensionsListReader is a Reader for the PostAvailableExtensionsList structure.
type PostAvailableExtensionsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAvailableExtensionsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAvailableExtensionsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostAvailableExtensionsListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostAvailableExtensionsListOK creates a PostAvailableExtensionsListOK with default headers values
func NewPostAvailableExtensionsListOK() *PostAvailableExtensionsListOK {
	return &PostAvailableExtensionsListOK{}
}

/*PostAvailableExtensionsListOK handles this case with default header values.

Retrieved all installed extensions
*/
type PostAvailableExtensionsListOK struct {
	Payload *models.AvailableExtensionListIntentResponse
}

func (o *PostAvailableExtensionsListOK) Error() string {
	return fmt.Sprintf("[POST /available_extensions/list][%d] postAvailableExtensionsListOK  %+v", 200, o.Payload)
}

func (o *PostAvailableExtensionsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AvailableExtensionListIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAvailableExtensionsListDefault creates a PostAvailableExtensionsListDefault with default headers values
func NewPostAvailableExtensionsListDefault(code int) *PostAvailableExtensionsListDefault {
	return &PostAvailableExtensionsListDefault{
		_statusCode: code,
	}
}

/*PostAvailableExtensionsListDefault handles this case with default header values.

Failed to retrieve all extensions
*/
type PostAvailableExtensionsListDefault struct {
	_statusCode int

	Payload *models.AvailableExtensionStatus
}

// Code gets the status code for the post available extensions list default response
func (o *PostAvailableExtensionsListDefault) Code() int {
	return o._statusCode
}

func (o *PostAvailableExtensionsListDefault) Error() string {
	return fmt.Sprintf("[POST /available_extensions/list][%d] PostAvailableExtensionsList default  %+v", o._statusCode, o.Payload)
}

func (o *PostAvailableExtensionsListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AvailableExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
