package extension

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// PutExtensionsUUIDReader is a Reader for the PutExtensionsUUID structure.
type PutExtensionsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExtensionsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutExtensionsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPutExtensionsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutExtensionsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPutExtensionsUUIDOK creates a PutExtensionsUUIDOK with default headers values
func NewPutExtensionsUUIDOK() *PutExtensionsUUIDOK {
	return &PutExtensionsUUIDOK{}
}

/*PutExtensionsUUIDOK handles this case with default header values.

Successful operation
*/
type PutExtensionsUUIDOK struct {
	Payload *models.ExtensionIntentResponse
}

func (o *PutExtensionsUUIDOK) Error() string {
	return fmt.Sprintf("[PUT /extensions/{uuid}][%d] putExtensionsUuidOK  %+v", 200, o.Payload)
}

func (o *PutExtensionsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExtensionsUUIDNotFound creates a PutExtensionsUUIDNotFound with default headers values
func NewPutExtensionsUUIDNotFound() *PutExtensionsUUIDNotFound {
	return &PutExtensionsUUIDNotFound{}
}

/*PutExtensionsUUIDNotFound handles this case with default header values.

Extension does not exists
*/
type PutExtensionsUUIDNotFound struct {
	Payload *models.ExtensionStatus
}

func (o *PutExtensionsUUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /extensions/{uuid}][%d] putExtensionsUuidNotFound  %+v", 404, o.Payload)
}

func (o *PutExtensionsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExtensionsUUIDDefault creates a PutExtensionsUUIDDefault with default headers values
func NewPutExtensionsUUIDDefault(code int) *PutExtensionsUUIDDefault {
	return &PutExtensionsUUIDDefault{
		_statusCode: code,
	}
}

/*PutExtensionsUUIDDefault handles this case with default header values.

Error
*/
type PutExtensionsUUIDDefault struct {
	_statusCode int

	Payload *models.ExtensionStatus
}

// Code gets the status code for the put extensions UUID default response
func (o *PutExtensionsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *PutExtensionsUUIDDefault) Error() string {
	return fmt.Sprintf("[PUT /extensions/{uuid}][%d] PutExtensionsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *PutExtensionsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
