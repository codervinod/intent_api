package volume_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// DeleteVolumeGroupsUUIDReader is a Reader for the DeleteVolumeGroupsUUID structure.
type DeleteVolumeGroupsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVolumeGroupsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteVolumeGroupsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteVolumeGroupsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteVolumeGroupsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewDeleteVolumeGroupsUUIDOK creates a DeleteVolumeGroupsUUIDOK with default headers values
func NewDeleteVolumeGroupsUUIDOK() *DeleteVolumeGroupsUUIDOK {
	return &DeleteVolumeGroupsUUIDOK{}
}

/*DeleteVolumeGroupsUUIDOK handles this case with default header values.

Deleted specified volume group
*/
type DeleteVolumeGroupsUUIDOK struct {
}

func (o *DeleteVolumeGroupsUUIDOK) Error() string {
	return fmt.Sprintf("[DELETE /volume_groups/{uuid}][%d] deleteVolumeGroupsUuidOK ", 200)
}

func (o *DeleteVolumeGroupsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumeGroupsUUIDNotFound creates a DeleteVolumeGroupsUUIDNotFound with default headers values
func NewDeleteVolumeGroupsUUIDNotFound() *DeleteVolumeGroupsUUIDNotFound {
	return &DeleteVolumeGroupsUUIDNotFound{}
}

/*DeleteVolumeGroupsUUIDNotFound handles this case with default header values.

Specified volume group does not exist
*/
type DeleteVolumeGroupsUUIDNotFound struct {
	Payload *models.VolumeGroupStatus
}

func (o *DeleteVolumeGroupsUUIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /volume_groups/{uuid}][%d] deleteVolumeGroupsUuidNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVolumeGroupsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeGroupStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeGroupsUUIDDefault creates a DeleteVolumeGroupsUUIDDefault with default headers values
func NewDeleteVolumeGroupsUUIDDefault(code int) *DeleteVolumeGroupsUUIDDefault {
	return &DeleteVolumeGroupsUUIDDefault{
		_statusCode: code,
	}
}

/*DeleteVolumeGroupsUUIDDefault handles this case with default header values.

Failed to delete specified volume group
*/
type DeleteVolumeGroupsUUIDDefault struct {
	_statusCode int

	Payload *models.VolumeGroupStatus
}

// Code gets the status code for the delete volume groups UUID default response
func (o *DeleteVolumeGroupsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVolumeGroupsUUIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /volume_groups/{uuid}][%d] DeleteVolumeGroupsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVolumeGroupsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeGroupStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
