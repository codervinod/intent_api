package volume_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// GetVolumeGroupsUUIDReader is a Reader for the GetVolumeGroupsUUID structure.
type GetVolumeGroupsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumeGroupsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVolumeGroupsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetVolumeGroupsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetVolumeGroupsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetVolumeGroupsUUIDOK creates a GetVolumeGroupsUUIDOK with default headers values
func NewGetVolumeGroupsUUIDOK() *GetVolumeGroupsUUIDOK {
	return &GetVolumeGroupsUUIDOK{}
}

/*GetVolumeGroupsUUIDOK handles this case with default header values.

Successfully retrieved specified volume group
*/
type GetVolumeGroupsUUIDOK struct {
	Payload *models.VolumeGroup
}

func (o *GetVolumeGroupsUUIDOK) Error() string {
	return fmt.Sprintf("[GET /volume_groups/{uuid}][%d] getVolumeGroupsUuidOK  %+v", 200, o.Payload)
}

func (o *GetVolumeGroupsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeGroupsUUIDNotFound creates a GetVolumeGroupsUUIDNotFound with default headers values
func NewGetVolumeGroupsUUIDNotFound() *GetVolumeGroupsUUIDNotFound {
	return &GetVolumeGroupsUUIDNotFound{}
}

/*GetVolumeGroupsUUIDNotFound handles this case with default header values.

Specified volume group does not exist
*/
type GetVolumeGroupsUUIDNotFound struct {
	Payload *models.VolumeGroupStatus
}

func (o *GetVolumeGroupsUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /volume_groups/{uuid}][%d] getVolumeGroupsUuidNotFound  %+v", 404, o.Payload)
}

func (o *GetVolumeGroupsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeGroupStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeGroupsUUIDDefault creates a GetVolumeGroupsUUIDDefault with default headers values
func NewGetVolumeGroupsUUIDDefault(code int) *GetVolumeGroupsUUIDDefault {
	return &GetVolumeGroupsUUIDDefault{
		_statusCode: code,
	}
}

/*GetVolumeGroupsUUIDDefault handles this case with default header values.

Failed to retrieve specified volume group
*/
type GetVolumeGroupsUUIDDefault struct {
	_statusCode int

	Payload *models.VolumeGroupStatus
}

// Code gets the status code for the get volume groups UUID default response
func (o *GetVolumeGroupsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *GetVolumeGroupsUUIDDefault) Error() string {
	return fmt.Sprintf("[GET /volume_groups/{uuid}][%d] GetVolumeGroupsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *GetVolumeGroupsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeGroupStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
