package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PutProjectsUUIDReader is a Reader for the PutProjectsUUID structure.
type PutProjectsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProjectsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutProjectsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPutProjectsUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPutProjectsUUIDOK creates a PutProjectsUUIDOK with default headers values
func NewPutProjectsUUIDOK() *PutProjectsUUIDOK {
	return &PutProjectsUUIDOK{}
}

/*PutProjectsUUIDOK handles this case with default header values.

Updated project
*/
type PutProjectsUUIDOK struct {
	Payload *models.Project
}

func (o *PutProjectsUUIDOK) Error() string {
	return fmt.Sprintf("[PUT /projects/{uuid}][%d] putProjectsUuidOK  %+v", 200, o.Payload)
}

func (o *PutProjectsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProjectsUUIDDefault creates a PutProjectsUUIDDefault with default headers values
func NewPutProjectsUUIDDefault(code int) *PutProjectsUUIDDefault {
	return &PutProjectsUUIDDefault{
		_statusCode: code,
	}
}

/*PutProjectsUUIDDefault handles this case with default header values.

Failed to update project
*/
type PutProjectsUUIDDefault struct {
	_statusCode int

	Payload *models.ProjectStatus
}

// Code gets the status code for the put projects UUID default response
func (o *PutProjectsUUIDDefault) Code() int {
	return o._statusCode
}

func (o *PutProjectsUUIDDefault) Error() string {
	return fmt.Sprintf("[PUT /projects/{uuid}][%d] PutProjectsUUID default  %+v", o._statusCode, o.Payload)
}

func (o *PutProjectsUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
