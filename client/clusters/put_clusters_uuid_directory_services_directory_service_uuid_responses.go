package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codervinod/intent_api/models"
)

// PutClustersUUIDDirectoryServicesDirectoryServiceUUIDReader is a Reader for the PutClustersUUIDDirectoryServicesDirectoryServiceUUID structure.
type PutClustersUUIDDirectoryServicesDirectoryServiceUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK creates a PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK with default headers values
func NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK() *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK {
	return &PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK{}
}

/*PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK handles this case with default header values.

Success
*/
type PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK struct {
	Payload *models.DirectoryServiceIntentResponse
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK) Error() string {
	return fmt.Sprintf("[PUT /clusters/{uuid}/directory_services/{directory_service_uuid}][%d] putClustersUuidDirectoryServicesDirectoryServiceUuidOK  %+v", 200, o.Payload)
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServiceIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound creates a PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound with default headers values
func NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound() *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound {
	return &PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound{}
}

/*PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound handles this case with default header values.

Invalid Directory Name Provided
*/
type PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound struct {
	Payload *models.DirectoryServiceStatus
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /clusters/{uuid}/directory_services/{directory_service_uuid}][%d] putClustersUuidDirectoryServicesDirectoryServiceUuidNotFound  %+v", 404, o.Payload)
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServiceStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault creates a PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault with default headers values
func NewPutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault(code int) *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault {
	return &PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault{
		_statusCode: code,
	}
}

/*PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault handles this case with default header values.

Failed to update the directory
*/
type PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault struct {
	_statusCode int

	Payload *models.DirectoryServiceStatus
}

// Code gets the status code for the put clusters UUID directory services directory service UUID default response
func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault) Code() int {
	return o._statusCode
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault) Error() string {
	return fmt.Sprintf("[PUT /clusters/{uuid}/directory_services/{directory_service_uuid}][%d] PutClustersUUIDDirectoryServicesDirectoryServiceUUID default  %+v", o._statusCode, o.Payload)
}

func (o *PutClustersUUIDDirectoryServicesDirectoryServiceUUIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServiceStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
