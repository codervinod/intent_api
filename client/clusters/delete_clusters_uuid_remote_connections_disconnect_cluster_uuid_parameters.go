package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams creates a new DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams object
// with the default values initialized.
func NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams() *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	var ()
	return &DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParamsWithTimeout creates a new DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParamsWithTimeout(timeout time.Duration) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	var ()
	return &DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams{

		timeout: timeout,
	}
}

// NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParamsWithContext creates a new DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParamsWithContext(ctx context.Context) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	var ()
	return &DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams{

		Context: ctx,
	}
}

/*DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams contains all the parameters to send to the API endpoint
for the delete clusters UUID remote connections disconnect cluster UUID operation typically these are written to a http.Request
*/
type DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams struct {

	/*ClusterUUID
	  The UUID of the cluster to disconnect

	*/
	ClusterUUID string
	/*UUID
	  The UUID of the entity.

	*/
	UUID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) WithTimeout(timeout time.Duration) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) WithContext(ctx context.Context) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithClusterUUID adds the clusterUUID to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) WithClusterUUID(clusterUUID string) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	o.SetClusterUUID(clusterUUID)
	return o
}

// SetClusterUUID adds the clusterUuid to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) SetClusterUUID(clusterUUID string) {
	o.ClusterUUID = clusterUUID
}

// WithUUID adds the uuid to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) WithUUID(uuid string) *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the delete clusters UUID remote connections disconnect cluster UUID params
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteClustersUUIDRemoteConnectionsDisconnectClusterUUIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param cluster_uuid
	if err := r.SetPathParam("cluster_uuid", o.ClusterUUID); err != nil {
		return err
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
