package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostClustersMulticlusterConfigReader is a Reader for the PostClustersMulticlusterConfig structure.
type PostClustersMulticlusterConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostClustersMulticlusterConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostClustersMulticlusterConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostClustersMulticlusterConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostClustersMulticlusterConfigOK creates a PostClustersMulticlusterConfigOK with default headers values
func NewPostClustersMulticlusterConfigOK() *PostClustersMulticlusterConfigOK {
	return &PostClustersMulticlusterConfigOK{}
}

/*PostClustersMulticlusterConfigOK handles this case with default header values.

Success
*/
type PostClustersMulticlusterConfigOK struct {
	Payload string
}

func (o *PostClustersMulticlusterConfigOK) Error() string {
	return fmt.Sprintf("[POST /clusters/multicluster_config][%d] postClustersMulticlusterConfigOK  %+v", 200, o.Payload)
}

func (o *PostClustersMulticlusterConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClustersMulticlusterConfigDefault creates a PostClustersMulticlusterConfigDefault with default headers values
func NewPostClustersMulticlusterConfigDefault(code int) *PostClustersMulticlusterConfigDefault {
	return &PostClustersMulticlusterConfigDefault{
		_statusCode: code,
	}
}

/*PostClustersMulticlusterConfigDefault handles this case with default header values.

Internal Error
*/
type PostClustersMulticlusterConfigDefault struct {
	_statusCode int
}

// Code gets the status code for the post clusters multicluster config default response
func (o *PostClustersMulticlusterConfigDefault) Code() int {
	return o._statusCode
}

func (o *PostClustersMulticlusterConfigDefault) Error() string {
	return fmt.Sprintf("[POST /clusters/multicluster_config][%d] PostClustersMulticlusterConfig default ", o._statusCode)
}

func (o *PostClustersMulticlusterConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
