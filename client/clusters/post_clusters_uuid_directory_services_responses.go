package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intent_api/models"
)

// PostClustersUUIDDirectoryServicesReader is a Reader for the PostClustersUUIDDirectoryServices structure.
type PostClustersUUIDDirectoryServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostClustersUUIDDirectoryServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostClustersUUIDDirectoryServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostClustersUUIDDirectoryServicesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostClustersUUIDDirectoryServicesOK creates a PostClustersUUIDDirectoryServicesOK with default headers values
func NewPostClustersUUIDDirectoryServicesOK() *PostClustersUUIDDirectoryServicesOK {
	return &PostClustersUUIDDirectoryServicesOK{}
}

/*PostClustersUUIDDirectoryServicesOK handles this case with default header values.

Success
*/
type PostClustersUUIDDirectoryServicesOK struct {
	Payload *models.DirectoryServiceIntentResponse
}

func (o *PostClustersUUIDDirectoryServicesOK) Error() string {
	return fmt.Sprintf("[POST /clusters/{uuid}/directory_services][%d] postClustersUuidDirectoryServicesOK  %+v", 200, o.Payload)
}

func (o *PostClustersUUIDDirectoryServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServiceIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClustersUUIDDirectoryServicesDefault creates a PostClustersUUIDDirectoryServicesDefault with default headers values
func NewPostClustersUUIDDirectoryServicesDefault(code int) *PostClustersUUIDDirectoryServicesDefault {
	return &PostClustersUUIDDirectoryServicesDefault{
		_statusCode: code,
	}
}

/*PostClustersUUIDDirectoryServicesDefault handles this case with default header values.

Error
*/
type PostClustersUUIDDirectoryServicesDefault struct {
	_statusCode int

	Payload *models.DirectoryServiceStatus
}

// Code gets the status code for the post clusters UUID directory services default response
func (o *PostClustersUUIDDirectoryServicesDefault) Code() int {
	return o._statusCode
}

func (o *PostClustersUUIDDirectoryServicesDefault) Error() string {
	return fmt.Sprintf("[POST /clusters/{uuid}/directory_services][%d] PostClustersUUIDDirectoryServices default  %+v", o._statusCode, o.Payload)
}

func (o *PostClustersUUIDDirectoryServicesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServiceStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
