package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ResourceUtilizationStatus Resource Utilization Status
//
// stores resource utilization and limits for a domain
// swagger:model resource_utilization_status
type ResourceUtilizationStatus struct {

	// The resource consumption limit (optional for unlimited)
	Limit int64 `json:"limit,omitempty"`

	// The type of resource (i.e. storage, cpus)
	// Required: true
	ResourceType *string `json:"resource_type"`

	// The units of the resource type
	// Required: true
	Units *string `json:"units"`

	// The amount of resource consumed
	// Required: true
	Value *int64 `json:"value"`
}

// Validate validates this resource utilization status
func (m *ResourceUtilizationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUnits(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceUtilizationStatus) validateResourceType(formats strfmt.Registry) error {

	if err := validate.Required("resource_type", "body", m.ResourceType); err != nil {
		return err
	}

	return nil
}

func (m *ResourceUtilizationStatus) validateUnits(formats strfmt.Registry) error {

	if err := validate.Required("units", "body", m.Units); err != nil {
		return err
	}

	return nil
}

func (m *ResourceUtilizationStatus) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}
