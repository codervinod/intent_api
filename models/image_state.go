package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ImageState Image state
//
// Current state of the image
// swagger:model image_state
type ImageState string

const (
	ImageStateCOMPLETE   ImageState = "COMPLETE"
	ImageStateINCOMPLETE ImageState = "INCOMPLETE"
)

// for schema
var imageStateEnum []interface{}

func (m ImageState) validateImageStateEnum(path, location string, value ImageState) error {
	if imageStateEnum == nil {
		var res []ImageState
		if err := json.Unmarshal([]byte(`["COMPLETE","INCOMPLETE"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			imageStateEnum = append(imageStateEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, imageStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this image state
func (m ImageState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateImageStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
