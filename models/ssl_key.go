package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// SslKey SSL certificate
//
// SSL certificate
// swagger:model ssl_key
type SslKey struct {

	// Data when the key expires
	ExpireDatetime string `json:"expire_datetime,omitempty"`

	// key name
	KeyName string `json:"key_name,omitempty"`

	// key type
	// Required: true
	KeyType SslKeyType `json:"key_type"`

	// signing info
	SigningInfo *CertificationSigningInfo `json:"signing_info,omitempty"`
}

// Validate validates this ssl key
func (m *SslKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKeyType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSigningInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SslKey) validateKeyType(formats strfmt.Registry) error {

	if err := m.KeyType.Validate(formats); err != nil {
		return err
	}

	return nil
}

func (m *SslKey) validateSigningInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.SigningInfo) { // not required
		return nil
	}

	if m.SigningInfo != nil {

		if err := m.SigningInfo.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
