package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PacketProcessorPort packet processor port definitions
//
// packet processor port definitions
// swagger:model packet_processor_port
type PacketProcessorPort struct {

	// local port fields
	LocalPortFields *PacketProcessorPortLocalPortFields `json:"local_port_fields,omitempty"`

	// The type of the processor port
	// Required: true
	PortType *string `json:"port_type"`
}

// Validate validates this packet processor port
func (m *PacketProcessorPort) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLocalPortFields(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePortType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PacketProcessorPort) validateLocalPortFields(formats strfmt.Registry) error {

	if swag.IsZero(m.LocalPortFields) { // not required
		return nil
	}

	if m.LocalPortFields != nil {

		if err := m.LocalPortFields.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

var packetProcessorPortTypePortTypePropEnum []interface{}

const (
	packetProcessorPortPortTypeLOCALPACKETPROCESSINGNIC string = "LOCAL_PACKET_PROCESSING_NIC"
)

// prop value enum
func (m *PacketProcessorPort) validatePortTypeEnum(path, location string, value string) error {
	if packetProcessorPortTypePortTypePropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["LOCAL_PACKET_PROCESSING_NIC"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			packetProcessorPortTypePortTypePropEnum = append(packetProcessorPortTypePortTypePropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, packetProcessorPortTypePortTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PacketProcessorPort) validatePortType(formats strfmt.Registry) error {

	if err := validate.Required("port_type", "body", m.PortType); err != nil {
		return err
	}

	// value enum
	if err := m.validatePortTypeEnum("port_type", "body", *m.PortType); err != nil {
		return err
	}

	return nil
}

// PacketProcessorPortLocalPortFields Revelent fields when port_type is LOCAL_PACKET_PROCESSING_NIC
// swagger:model PacketProcessorPortLocalPortFields
type PacketProcessorPortLocalPortFields struct {

	// The base name of a local type port.
	// Required: true
	VMBaseName *string `json:"vm_base_name"`

	// The interface name of a local type port.
	// Required: true
	VMInterfaceName *string `json:"vm_interface_name"`
}

// Validate validates this packet processor port local port fields
func (m *PacketProcessorPortLocalPortFields) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVMBaseName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVMInterfaceName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PacketProcessorPortLocalPortFields) validateVMBaseName(formats strfmt.Registry) error {

	if err := validate.Required("local_port_fields"+"."+"vm_base_name", "body", m.VMBaseName); err != nil {
		return err
	}

	return nil
}

func (m *PacketProcessorPortLocalPortFields) validateVMInterfaceName(formats strfmt.Registry) error {

	if err := validate.Required("local_port_fields"+"."+"vm_interface_name", "body", m.VMInterfaceName); err != nil {
		return err
	}

	return nil
}
