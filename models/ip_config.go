package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// IPConfig IP config
//
// IP config
// swagger:model ip_config
type IPConfig struct {

	// default gateway
	DefaultGateway string `json:"default_gateway,omitempty"`

	// dhcp options
	DhcpOptions *DhcpOptions `json:"dhcp_options,omitempty"`

	// dhcp server address
	DhcpServerAddress string `json:"dhcp_server_address,omitempty"`

	// network address
	NetworkAddress string `json:"network_address,omitempty"`

	// pool
	Pool []*IPPool `json:"pool,omitempty"`

	// prefix length
	PrefixLength string `json:"prefix_length,omitempty"`
}

// Validate validates this ip config
func (m *IPConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDhcpOptions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePool(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPConfig) validateDhcpOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.DhcpOptions) { // not required
		return nil
	}

	if m.DhcpOptions != nil {

		if err := m.DhcpOptions.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *IPConfig) validatePool(formats strfmt.Registry) error {

	if swag.IsZero(m.Pool) { // not required
		return nil
	}

	for i := 0; i < len(m.Pool); i++ {

		if swag.IsZero(m.Pool[i]) { // not required
			continue
		}

		if m.Pool[i] != nil {

			if err := m.Pool[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
