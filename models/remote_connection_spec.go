package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RemoteConnectionSpec Remote connection spec
//
// Remote connection spec
// swagger:model remote_connection_spec
type RemoteConnectionSpec struct {

	// access config
	// Required: true
	AccessConfig *ServerAccessConfig `json:"access_config"`

	// credentials
	// Required: true
	Credentials *Credentials `json:"credentials"`
}

// Validate validates this remote connection spec
func (m *RemoteConnectionSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessConfig(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCredentials(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RemoteConnectionSpec) validateAccessConfig(formats strfmt.Registry) error {

	if err := validate.Required("access_config", "body", m.AccessConfig); err != nil {
		return err
	}

	if m.AccessConfig != nil {

		if err := m.AccessConfig.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *RemoteConnectionSpec) validateCredentials(formats strfmt.Registry) error {

	if err := validate.Required("credentials", "body", m.Credentials); err != nil {
		return err
	}

	if m.Credentials != nil {

		if err := m.Credentials.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
