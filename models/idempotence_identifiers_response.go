package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// IdempotenceIdentifiersResponse Idemopotence identifier status definition
//
// Idemopotence identifier status definition
// swagger:model idempotence_identifiers_response
type IdempotenceIdentifiersResponse struct {

	// Client identifier string
	// Required: true
	ClientIdentifier *string `json:"client_identifier"`

	// Number of idempotence identifier uuid
	// Required: true
	Count *int64 `json:"count"`

	// uuid list
	// Required: true
	UUIDList []string `json:"uuid_list"`
}

// Validate validates this idempotence identifiers response
func (m *IdempotenceIdentifiersResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientIdentifier(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUUIDList(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IdempotenceIdentifiersResponse) validateClientIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("client_identifier", "body", m.ClientIdentifier); err != nil {
		return err
	}

	return nil
}

func (m *IdempotenceIdentifiersResponse) validateCount(formats strfmt.Registry) error {

	if err := validate.Required("count", "body", m.Count); err != nil {
		return err
	}

	return nil
}

func (m *IdempotenceIdentifiersResponse) validateUUIDList(formats strfmt.Registry) error {

	if err := validate.Required("uuid_list", "body", m.UUIDList); err != nil {
		return err
	}

	for i := 0; i < len(m.UUIDList); i++ {

		if err := validate.Pattern("uuid_list"+"."+strconv.Itoa(i), "body", string(m.UUIDList[i]), `^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$`); err != nil {
			return err
		}

	}

	return nil
}
