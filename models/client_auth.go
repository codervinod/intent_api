package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClientAuth Client authentication config
//
// Client authentication config
// swagger:model client_auth
type ClientAuth struct {

	// Content of CA chain certificate
	// Read Only: true
	CaChain strfmt.Base64 `json:"ca_chain,omitempty"`

	// Name of CA chain file
	// Read Only: true
	Name string `json:"name,omitempty"`

	// Status of client authentication
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this client auth
func (m *ClientAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var clientAuthTypeStatusPropEnum []interface{}

const (
	clientAuthStatusENABLED  string = "ENABLED"
	clientAuthStatusDISABLED string = "DISABLED"
)

// prop value enum
func (m *ClientAuth) validateStatusEnum(path, location string, value string) error {
	if clientAuthTypeStatusPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["ENABLED","DISABLED"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			clientAuthTypeStatusPropEnum = append(clientAuthTypeStatusPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, clientAuthTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ClientAuth) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}
