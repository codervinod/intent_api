package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// GroupsGroupResult Group Result
//
// Group Result
// swagger:model groups_group_result
type GroupsGroupResult struct {

	// entity results
	EntityResults []*GroupsEntity `json:"entity_results,omitempty"`

	// group by column value
	GroupByColumnValue string `json:"group_by_column_value,omitempty"`

	// group summaries
	GroupSummaries GroupsGroupSummaryMap `json:"group_summaries,omitempty"`

	// total entity count
	TotalEntityCount int64 `json:"total_entity_count,omitempty"`
}

// Validate validates this groups group result
func (m *GroupsGroupResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEntityResults(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupsGroupResult) validateEntityResults(formats strfmt.Registry) error {

	if swag.IsZero(m.EntityResults) { // not required
		return nil
	}

	for i := 0; i < len(m.EntityResults); i++ {

		if swag.IsZero(m.EntityResults[i]) { // not required
			continue
		}

		if m.EntityResults[i] != nil {

			if err := m.EntityResults[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
