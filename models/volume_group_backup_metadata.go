package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VolumeGroupBackupMetadata volume_group backup metadata
//
// The volume_group backup kind metadata
// swagger:model volume_group_backup_metadata
type VolumeGroupBackupMetadata struct {

	// Time when volume_group backup was created
	CreationTime string `json:"creation_time,omitempty"`

	// Monotonically increasing number
	EntityVersion int64 `json:"entity_version,omitempty"`

	// The kind backup name
	// Read Only: true
	Kind string `json:"kind,omitempty"`

	// Time when volume_group backup was last updated
	LastUpdateTime string `json:"last_update_time,omitempty"`

	// volume_group backup name
	// Max Length: 140
	Name string `json:"name,omitempty"`

	// parent reference
	ParentReference *VolumeGroupReference `json:"parent_reference,omitempty"`

	// volume_group backup uuid
	// Pattern: \A[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\Z
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this volume group backup metadata
func (m *VolumeGroupBackupMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateParentReference(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUUID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var volumeGroupBackupMetadataTypeKindPropEnum []interface{}

const (
	volumeGroupBackupMetadataKindVolumeGroupBackup string = "volume_group_backup"
)

// prop value enum
func (m *VolumeGroupBackupMetadata) validateKindEnum(path, location string, value string) error {
	if volumeGroupBackupMetadataTypeKindPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["volume_group_backup"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			volumeGroupBackupMetadataTypeKindPropEnum = append(volumeGroupBackupMetadataTypeKindPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, volumeGroupBackupMetadataTypeKindPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VolumeGroupBackupMetadata) validateKind(formats strfmt.Registry) error {

	if swag.IsZero(m.Kind) { // not required
		return nil
	}

	// value enum
	if err := m.validateKindEnum("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

func (m *VolumeGroupBackupMetadata) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", string(m.Name), 140); err != nil {
		return err
	}

	return nil
}

func (m *VolumeGroupBackupMetadata) validateParentReference(formats strfmt.Registry) error {

	if swag.IsZero(m.ParentReference) { // not required
		return nil
	}

	if m.ParentReference != nil {

		if err := m.ParentReference.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *VolumeGroupBackupMetadata) validateUUID(formats strfmt.Registry) error {

	if swag.IsZero(m.UUID) { // not required
		return nil
	}

	if err := validate.Pattern("uuid", "body", string(m.UUID), `\A[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\Z`); err != nil {
		return err
	}

	return nil
}
