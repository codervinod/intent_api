package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// JobExecutionArg Parameters for execution of the job
//
// Parameters for execution of the job
// swagger:model job_execution_arg
type JobExecutionArg struct {

	// Execution type for recovery plan
	JobExecutionType string `json:"job_execution_type,omitempty"`

	// Time with respect to which job has to be executed
	ReferenceTime int64 `json:"reference_time,omitempty"`
}

// Validate validates this job execution arg
func (m *JobExecutionArg) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateJobExecutionType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var jobExecutionArgTypeJobExecutionTypePropEnum []interface{}

const (
	jobExecutionArgJobExecutionTypeTEST              string = "TEST"
	jobExecutionArgJobExecutionTypePLANNEDFAILOVER   string = "PLANNED_FAIL_OVER"
	jobExecutionArgJobExecutionTypeUNPLANNEDFAILOVER string = "UNPLANNED_FAIL_OVER"
	jobExecutionArgJobExecutionTypeSYNCNOW           string = "SYNCNOW"
	jobExecutionArgJobExecutionTypeVALIDATE          string = "VALIDATE"
)

// prop value enum
func (m *JobExecutionArg) validateJobExecutionTypeEnum(path, location string, value string) error {
	if jobExecutionArgTypeJobExecutionTypePropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["TEST","PLANNED_FAIL_OVER","UNPLANNED_FAIL_OVER","SYNCNOW","VALIDATE"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			jobExecutionArgTypeJobExecutionTypePropEnum = append(jobExecutionArgTypeJobExecutionTypePropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, jobExecutionArgTypeJobExecutionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *JobExecutionArg) validateJobExecutionType(formats strfmt.Registry) error {

	if swag.IsZero(m.JobExecutionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateJobExecutionTypeEnum("job_execution_type", "body", m.JobExecutionType); err != nil {
		return err
	}

	return nil
}
