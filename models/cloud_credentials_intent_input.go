package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"
)

// CloudCredentialsIntentInput cloud_credentials Intent Entity
//
// An intentful representation of a cloud_credentials
// swagger:model cloud_credentials_intent_input
type CloudCredentialsIntentInput struct {

	// api version
	// Required: true
	APIVersion *string `json:"api_version"`

	// metadata
	// Required: true
	Metadata *CloudCredentialsMetadata `json:"metadata"`

	// options
	Options Options `json:"options,omitempty"`

	Spec CloudCredentials `json:"-"`
}

// UnmarshalJSON unmarshals this object with a polymorphic type from a JSON structure
func (m *CloudCredentialsIntentInput) UnmarshalJSON(raw []byte) error {
	var data struct {
		APIVersion *string `json:"api_version"`

		Metadata *CloudCredentialsMetadata `json:"metadata"`

		Options Options `json:"options,omitempty"`

		Spec json.RawMessage `json:"spec,omitempty"`
	}

	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	spec, err := UnmarshalCloudCredentials(bytes.NewBuffer(data.Spec), runtime.JSONConsumer())
	if err != nil {
		return err
	}

	var result CloudCredentialsIntentInput
	result.APIVersion = data.APIVersion
	result.Metadata = data.Metadata
	result.Options = data.Options
	result.Spec = spec
	*m = result
	return nil
}

// MarshalJSON marshals this object with a polymorphic type to a JSON structure
func (m CloudCredentialsIntentInput) MarshalJSON() ([]byte, error) {
	var b1, b2 []byte
	var err error
	b1, err = json.Marshal(struct {
		APIVersion *string `json:"api_version"`

		Metadata *CloudCredentialsMetadata `json:"metadata"`

		Options Options `json:"options,omitempty"`
	}{
		APIVersion: m.APIVersion,
		Metadata:   m.Metadata,
		Options:    m.Options,
	})
	if err != nil {
		return nil, err
	}
	b2, err = json.Marshal(struct {
		Spec CloudCredentials `json:"spec,omitempty"`
	}{
		Spec: m.Spec,
	})
	if err != nil {
		return nil, err
	}
	return swag.ConcatJSON(b1, b2), nil
}

// Validate validates this cloud credentials intent input
func (m *CloudCredentialsIntentInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPIVersion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudCredentialsIntentInput) validateAPIVersion(formats strfmt.Registry) error {

	if err := validate.Required("api_version", "body", m.APIVersion); err != nil {
		return err
	}

	return nil
}

func (m *CloudCredentialsIntentInput) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("metadata", "body", m.Metadata); err != nil {
		return err
	}

	if m.Metadata != nil {

		if err := m.Metadata.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
