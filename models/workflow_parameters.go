package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// WorkflowParameters Parameter for workflow
//
// Input parameter for workflow
// swagger:model workflow_parameters
type WorkflowParameters struct {

	// Type of parameter
	// Required: true
	ParamKey *string `json:"param_key"`

	// Object representing the value of param
	ParamValue interface{} `json:"param_value,omitempty"`
}

// Validate validates this workflow parameters
func (m *WorkflowParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParamKey(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var workflowParametersTypeParamKeyPropEnum []interface{}

const (
	workflowParametersParamKeyRECOVERYPLANARG string = "RECOVERY_PLAN_ARG"
)

// prop value enum
func (m *WorkflowParameters) validateParamKeyEnum(path, location string, value string) error {
	if workflowParametersTypeParamKeyPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["RECOVERY_PLAN_ARG"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			workflowParametersTypeParamKeyPropEnum = append(workflowParametersTypeParamKeyPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, workflowParametersTypeParamKeyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *WorkflowParameters) validateParamKey(formats strfmt.Registry) error {

	if err := validate.Required("param_key", "body", m.ParamKey); err != nil {
		return err
	}

	// value enum
	if err := m.validateParamKeyEnum("param_key", "body", *m.ParamKey); err != nil {
		return err
	}

	return nil
}
