package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// PolicyEndpoint Policy endpoint
//
// Endpoint definition for a policy
// swagger:model policy_endpoint
type PolicyEndpoint struct {

	// category endpoint
	CategoryEndpoint *PolicyCategoryEndpoint `json:"category_endpoint,omitempty"`

	// network endpoint
	NetworkEndpoint *PolicyNetworkEndpoint `json:"network_endpoint,omitempty"`
}

// Validate validates this policy endpoint
func (m *PolicyEndpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategoryEndpoint(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNetworkEndpoint(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PolicyEndpoint) validateCategoryEndpoint(formats strfmt.Registry) error {

	if swag.IsZero(m.CategoryEndpoint) { // not required
		return nil
	}

	if m.CategoryEndpoint != nil {

		if err := m.CategoryEndpoint.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *PolicyEndpoint) validateNetworkEndpoint(formats strfmt.Registry) error {

	if swag.IsZero(m.NetworkEndpoint) { // not required
		return nil
	}

	if m.NetworkEndpoint != nil {

		if err := m.NetworkEndpoint.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
