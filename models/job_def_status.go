package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// JobDefStatus Job Definition
//
// Job Definition
// swagger:model job_def_status
type JobDefStatus struct {

	// Job Name
	// Required: true
	// Max Length: 140
	Name *string `json:"name"`

	// resources
	// Required: true
	Resources *JobDefStatusResources `json:"resources"`
}

// Validate validates this job def status
func (m *JobDefStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResources(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobDefStatus) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", string(*m.Name), 140); err != nil {
		return err
	}

	return nil
}

func (m *JobDefStatus) validateResources(formats strfmt.Registry) error {

	if err := validate.Required("resources", "body", m.Resources); err != nil {
		return err
	}

	if m.Resources != nil {

		if err := m.Resources.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// JobDefStatusResources Job resources
// swagger:model JobDefStatusResources
type JobDefStatusResources struct {

	// execution status
	ExecutionStatus *ExecutionStatus `json:"execution_status,omitempty"`

	// Status of stages of execution for this job
	Stages []*StageProgress `json:"stages,omitempty"`

	// State of workflow when job execution is started
	WorkflowState *Workflow `json:"workflow_state,omitempty"`

	// Uuid of the workflow this job belongs to
	WorkflowUUID string `json:"workflow_uuid,omitempty"`
}

// Validate validates this job def status resources
func (m *JobDefStatusResources) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExecutionStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStages(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateWorkflowState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobDefStatusResources) validateExecutionStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ExecutionStatus) { // not required
		return nil
	}

	if m.ExecutionStatus != nil {

		if err := m.ExecutionStatus.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *JobDefStatusResources) validateStages(formats strfmt.Registry) error {

	if swag.IsZero(m.Stages) { // not required
		return nil
	}

	for i := 0; i < len(m.Stages); i++ {

		if swag.IsZero(m.Stages[i]) { // not required
			continue
		}

		if m.Stages[i] != nil {

			if err := m.Stages[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *JobDefStatusResources) validateWorkflowState(formats strfmt.Registry) error {

	if swag.IsZero(m.WorkflowState) { // not required
		return nil
	}

	if m.WorkflowState != nil {

		if err := m.WorkflowState.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
