package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OauthRegisterTokenResponse Oauth register token response
//
// Upon register token succeeds, return e host details and its access
// token to create security channel
//
// swagger:model oauth_register_token_response
type OauthRegisterTokenResponse struct {

	// host
	// Required: true
	Host *RemoteHost `json:"host"`

	// host token
	// Required: true
	HostToken *OauthGenerateTokenResponse `json:"host_token"`
}

// Validate validates this oauth register token response
func (m *OauthRegisterTokenResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHost(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHostToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OauthRegisterTokenResponse) validateHost(formats strfmt.Registry) error {

	if err := validate.Required("host", "body", m.Host); err != nil {
		return err
	}

	if m.Host != nil {

		if err := m.Host.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *OauthRegisterTokenResponse) validateHostToken(formats strfmt.Registry) error {

	if err := validate.Required("host_token", "body", m.HostToken); err != nil {
		return err
	}

	if m.HostToken != nil {

		if err := m.HostToken.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
