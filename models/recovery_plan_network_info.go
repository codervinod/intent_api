package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// RecoveryPlanNetworkInfo Network info for recovery plan workflow
//
// Network info for recovery plan workflow
// swagger:model recovery_plan_network_info
type RecoveryPlanNetworkInfo struct {

	// Network mapping for recovery plan
	NetworkMapping []*RecoveryPlanL2NetworkMapping `json:"network_mapping,omitempty"`

	// L3 network mapping for recovery plan
	StaticIPAssignment []*RecoveryPlanL3NetworkMapping `json:"static_ip_assignment,omitempty"`
}

// Validate validates this recovery plan network info
func (m *RecoveryPlanNetworkInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNetworkMapping(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStaticIPAssignment(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RecoveryPlanNetworkInfo) validateNetworkMapping(formats strfmt.Registry) error {

	if swag.IsZero(m.NetworkMapping) { // not required
		return nil
	}

	for i := 0; i < len(m.NetworkMapping); i++ {

		if swag.IsZero(m.NetworkMapping[i]) { // not required
			continue
		}

		if m.NetworkMapping[i] != nil {

			if err := m.NetworkMapping[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *RecoveryPlanNetworkInfo) validateStaticIPAssignment(formats strfmt.Registry) error {

	if swag.IsZero(m.StaticIPAssignment) { // not required
		return nil
	}

	for i := 0; i < len(m.StaticIPAssignment); i++ {

		if swag.IsZero(m.StaticIPAssignment[i]) { // not required
			continue
		}

		if m.StaticIPAssignment[i] != nil {

			if err := m.StaticIPAssignment[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
