package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ChecksumAlgorithm Checksum algorithm
//
// The type of checksum calculated for the image
// swagger:model checksum_algorithm
type ChecksumAlgorithm string

const (
	ChecksumAlgorithmSHA256 ChecksumAlgorithm = "SHA_256"
	ChecksumAlgorithmSHA1   ChecksumAlgorithm = "SHA_1"
)

// for schema
var checksumAlgorithmEnum []interface{}

func (m ChecksumAlgorithm) validateChecksumAlgorithmEnum(path, location string, value ChecksumAlgorithm) error {
	if checksumAlgorithmEnum == nil {
		var res []ChecksumAlgorithm
		if err := json.Unmarshal([]byte(`["SHA_256","SHA_1"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			checksumAlgorithmEnum = append(checksumAlgorithmEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, checksumAlgorithmEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this checksum algorithm
func (m ChecksumAlgorithm) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateChecksumAlgorithmEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
