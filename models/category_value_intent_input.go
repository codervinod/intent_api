package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// CategoryValueIntentInput Category value
//
// An intentful representation of a Category value
// swagger:model category_value_intent_input
type CategoryValueIntentInput struct {

	// Api version
	// Required: true
	// Read Only: true
	APIVersion string `json:"api_version"`

	// metadata
	// Required: true
	Metadata *CategoryMetadata `json:"metadata"`

	// spec
	Spec *CategoryValueIntentInputSpec `json:"spec,omitempty"`
}

// Validate validates this category value intent input
func (m *CategoryValueIntentInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPIVersion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSpec(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CategoryValueIntentInput) validateAPIVersion(formats strfmt.Registry) error {

	if err := validate.RequiredString("api_version", "body", string(m.APIVersion)); err != nil {
		return err
	}

	return nil
}

func (m *CategoryValueIntentInput) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("metadata", "body", m.Metadata); err != nil {
		return err
	}

	if m.Metadata != nil {

		if err := m.Metadata.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *CategoryValueIntentInput) validateSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.Spec) { // not required
		return nil
	}

	if m.Spec != nil {

		if err := m.Spec.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// CategoryValueIntentInputSpec category value intent input spec
// swagger:model CategoryValueIntentInputSpec
type CategoryValueIntentInputSpec struct {

	// resources
	Resources *CategoryValue `json:"resources,omitempty"`
}

// Validate validates this category value intent input spec
func (m *CategoryValueIntentInputSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResources(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CategoryValueIntentInputSpec) validateResources(formats strfmt.Registry) error {

	if swag.IsZero(m.Resources) { // not required
		return nil
	}

	if m.Resources != nil {

		if err := m.Resources.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
